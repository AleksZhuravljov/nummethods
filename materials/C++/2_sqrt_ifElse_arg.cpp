// Описание: решение квадратного уравнения, ввод данных через аргументы командной строки, алгоритмы ветвления.

// Подключение классов:
#include <iostream>
#include <cstdlib> // стандартной библиотеки «cstdlib»;
#include <cmath> // математических операций «cmath».

using namespace std;

int main(int narg, char **arg) // «Базовая» функция «main()», в данном случае со стандартными аргументами («narg» - количество аргументов в командной строке, «arg» - сами аргументы).
{
  // Объявление и «нулевая» инициализация переменных для:
  double a = 0; // константы квадратного уравнения «a»;
  double b = 0; // константы квадратного уравнения «b»;
  double c = 0; // константы квадратного уравнения «c»;
  double x1 = 0; // первого корня квадратного уравнения «x1»;
  double x2 = 0; // второго корня квадратного уравнения «x2».

  // Считывание констант квадратного уравнения из соответствующих аргументов командной строки методом «atof()» класса «cstdlib»:
  a = atof(arg[1]); // константа «a»;
  b = atof(arg[2]); // константа «b»;
  c = atof(arg[3]); // константа «c»;

  // Решение и вывод решения квадратного уравнения при помощи алгоритмов ветвления и метода «sqrt» (квадратный корень) класса «cmath»:
  if ((b * b - 4 * a * c) >= 0 && a != 0) // если дискриминант неотрицателен (логические символы: ">=" - «больше либо равно», "&&" - «и», "!=" - «не равно»);
  {
    x1 = (- b - sqrt(b * b - 4 * a * c)) / (2 * a);
    x2 = (- b + sqrt(b * b - 4 * a * c)) / (2 * a);
    cout << "x1=" << x1 << endl;
    cout << "x2=" << x2 << endl;
  }
  else if ((b * b - 4 * a * c) < 0 && a != 0) // в противном случае, если дискриминант отрицателен ("<" - логическое «меньше»);
  {
    x1 = sqrt(-b * b + 4 * a * c) / (2 * a);
    x2 = sqrt(-b * b + 4 * a * c) / (2 * a);
    if (x1 >= 0)
      cout << "x1=" << (-b) << "-i" << x1 << endl;
    else
      cout << "x1=" << (-b) << "+i" << -x1 << endl;
    if (x2 >= 0)
      cout << "x2=" << (-b) << "+i" << x2 << endl;
    else
      cout << "x2=" << (-b) << "-i" << -x2 << endl;
  }
  else if (a == 0) // в противном случае, если константа «a» равна нулю ("==" - логическое «равно»).
  {
    x1 = (-c / b);
    cout << "x=" << x1 << endl;
  }
  return 0;
}
